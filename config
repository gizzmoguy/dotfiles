# Default config for sway
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
#Display out secet
# You can get the names of your outputs by running: swaymsg -t get_outputs
	output * scale 1.
#	output HDMI-A-1 scale 1. 
#	output HDMI-A-2 scale 1.
        

	output HDMI-A-1 pos 0 0
	output HDMI-A-2 pos 3840 0

	set $monitor_left "HDMI-A-1"
	set $monitor_right "HDMI-A-2"

### Variables
#
# Logo key. Use Mod1 for Alt.
	set $mod Mod4
# Home row direction keys, like vim
	set $left h
	set $down j
	set $up k
	set $right l
# Your preferred terminal emulator
# Recommends: foot
#set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# Recommends: rofi-wayland
	set $rofi_cmd rofi \
        -terminal '$term'
# Shows a combined list of the applications with desktop files and
# executables from PATH.
# TODO: add window with the next release of rofi-wayland

#set $menu $rofi_cmd -show combi -combi-modes drun#run -modes combi
	set $menu wofi -c ~/.config/wofi/config -I

### Output configuration
#
# Requires: desktop-backgrounds-compat, swaybg
#############WALLPAPERS#############

output HDMI-A-1 bg $HOME/Pictures/wallpaper/Hyper-beast/Hyper-Beast.jpg fill
output HDMI-A-2 bg $$HOME/Pictures/wallpaper/Hyper-beast/Hyper-Beast1.jpg fill

#output HDMI-A-1 bg $HOME/Pictures/wallpaper/Opal/Opal.png fill
#output HDMI-A-2 bg $$HOME/Pictures/wallpaper/Opal/Opal1.png fill

#output HDMI-A-2 bg $HOME/Pictures/wallpaper/Space/Space1.jpg fill
#output HDMI-A-2 bg $HOME/Pictures/wallpaper/Space/Space1.jpg fill

#output HDMI-A-1 bg $HOME/Pictures/wallpaper/Kay/Kay.png fill
#output HDMI-A-2 bg $HOME/Pictures/wallpaper/Kay/Kay1.png fill

#output HDMI-A-1 bg $HOME/Pictures/wallpaper/Spiderman/Spiderman.jpg fill
#output HDMI-A-2 bg $HOME/Pictures/wallpaper/Spiderman/Spiderman1.jpg fill

#output HDMI-A-1 bg /usr/share/backgrounds/Ocean.jpg fill
#output HDMI-A-2 bg /usr/share/backgrounds/Ocean1.jpg fill

#output HDMI-A-1 bg $HOME/Pictures/wallpaper/Seatle/seatle.png fill
#output HDMI-A-2 bg $HOME/Pictures/wallpaper/Seatle/seatle1.png fill

#output HDMI-A-1 bg $HOME/Pictures/wallpaper/Pixel/pixel.jpg fill
#output HDMI-A-2 bg $HOME/Pictures/wallpaper/Pixel/pixel1.jpg fill


#output HDMI-A-1 bg $HOME/Pictures/wallpaper/Fire/Fire.jpg fill
#output HDMI-A-2 bg $HOME/Pictures/wallpaper/Fire/Fire2.jpg fill


#output HDMI-A-1 bg $HOME/Pictures/wallpaper/Pink/Pink.jpg fill
#output HDMI-A-2 bg $HOME/Pictures/wallpaper/Pink/Pink1.jpg fill


#output HDMI-A-1 bg $HOME/Pictures/wallpaper/Marble/Marble.jpg fill
#output HDMI-A-2 bg $HOME/Pictures/wallpaper/Marble/Marble1.jpg fill

#output HDMI-A-1 bg /usr/share/backgrounds/default1.png fill
#output HDMI-A-2 bg /usr/share/backgrounds/default.png fill

#output * bg /usr/share/backgrounds/default.png fill
#
#Example configuration:
#
#output HDMI-A-1 resolution 1920x1080 position 1920,0



### Idle configuration
#
# Example configuration:

#
 exec swayidle -w \
          timeout 3590 'swaylock -f -c 000000' \
          timeout 3640 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 1800 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings

# Basics:
#
    # Start a terminal
#bindsym $mod+Return exec $term 
	bindsym $mod+Return exec xfce4-terminal
	bindsym $mod+alt+l exec swaylock
	bindsym $mod+f exec firefox
	bindsym $mod+shift+return exec dolphin 
	bindsym Alt+x exec thunar
	bindsym $mod+KP_Enter exec konsole
	bindsym $mod+KP_Delete kill
	bindsym $mod+KP_Subtract kill
# Screenshots
#
#bindsym print exec /usr/share/sway/scripts/grimshot --notify save output
	bindsym Shift+print exec ~/.config/sway/scripts/screenshot.sh

#start an application on a specific workspace
 
# Kill focused window
	bindsym $mod+q kill
	bindsym alt+q kill

# Start your launcher
	bindsym $mod+d exec $menu

#Open clementine on workspace 6
	bindsym $mod+m  exec clementine


# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
	floating_modifier $mod normal

# Reload the configuration file
	bindsym $mod+Shift+c reload
	bindsym $mod+r reload

# Exit sway (logs you out of your Wayland session)
	bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
# Move your focus around
	bindsym $mod+$left focus left
	bindsym $mod+$down focus down
	bindsym $mod+$up focus up
	bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
	bindsym $mod+Shift+$left move left
	bindsym $mod+Shift+$down move down
	bindsym $mod+Shift+$up move up
	bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
	bindsym $mod+Shift+Left move left
	bindsym $mod+Shift+Down move down
	bindsym $mod+Shift+Up move up
	bindsym $mod+Shift+Right move right
# Ditto,Multiply and Divide keys on Numpad(Move focus around)
	bindsym $mod+KP_Divide focus left
	bindsym $mod+KP_Multiply focus right 
#
	bindsym $mod+Shift+KP_Divide move left
	bindsym $mod+Shift+KP_Multiply move right 
# Workspaces:
#
# Switch to workspace
        bindsym $mod+1 workspace number 1
        bindsym $mod+2 workspace number 2
        bindsym $mod+3 workspace number 3
        bindsym $mod+4 workspace number 4
        bindsym $mod+5 workspace number 5
        bindsym $mod+6 workspace number 6
        bindsym $mod+7 workspace number 7
        bindsym $mod+8 workspace number 8
        bindsym $mod+9 workspace number 9
        bindsym $mod+0 workspace number 10

# Move focused container to workspace
        bindsym $mod+Shift+1 move container to workspace number 1
        bindsym $mod+Shift+2 move container to workspace number 2
        bindsym $mod+Shift+3 move container to workspace number 3
        bindsym $mod+Shift+4 move container to workspace number 4
        bindsym $mod+Shift+5 move container to workspace number 5
        bindsym $mod+Shift+6 move container to workspace number 6
        bindsym $mod+Shift+7 move container to workspace number 7
        bindsym $mod+Shift+8 move container to workspace number 8
        bindsym $mod+Shift+9 move container to workspace number 9
        bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

#Assign workspace to monitor

        set $ws1 "1"
        set $ws2 "2"
        set $ws3 "3"
        set $ws4 "4"
        set $ws5 "5"
        set $ws6 "6"
        set $ws7 "7"
        set $ws8 "8"
        set $ws9 "9"
        set $ws10 "10"

        workspace $ws1 output $monitor_left
        workspace $ws2 output $monitor_left
        workspace $ws3 output $monitor_left
        workspace $ws4 output $monitor_left
        workspace $ws5 output $monitor_left
        workspace $ws6 output $monitor_right
        workspace $ws7 output $monitor_right
        workspace $ws8 output $monitor_right
        workspace $ws9 output $monitor_right
        workspace $ws10 output $monitor_right

# Using Numpad to change workspace EXPERIMENTAL Switch to workspace

        bindsym $mod+KP_End         workspace number 1
        bindsym $mod+KP_Down      workspace number 2
        bindsym $mod+KP_Next        workspace number 3
        bindsym $mod+KP_Left         workspace number 4
        bindsym $mod+KP_Begin      workspace number 5
        bindsym $mod+KP_Right       workspace number 6
        bindsym $mod+KP_Home      workspace number 7
        bindsym $mod+KP_up           workspace number 8
        bindsym $mod+KP_Prior        workspace number 9
        bindsym $mod+KP_Insert      workspace number 10


# Using Numpad to move container to workspace

        bindsym $mod+Shift+KP_End      move container to workspace number 1
        bindsym $mod+Shift+KP_Down   move container to workspace number 2
        bindsym $mod+Shift+KP_Next     move container to workspace number 3
        bindsym $mod+Shift+KP_Left      move container to workspace number 4
        bindsym $mod+Shift+KP_Begin   move container to workspace number 5
        bindsym $mod+Shift+KP_Right    move container to workspace number 6
        bindsym $mod+Shift+KP_Home   move container to workspace number 7
        bindsym $mod+Shift+KP_Up        move container to workspace number 8
        bindsym $mod+Shift+KP_Prior     move container to workspace number 9
        bindsym $mod+Shift+KP_Insert   move container to workspace number 10

# Layout stuff:

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
	bindsym $mod+z splith
	bindsym $mod+a splitv

# Switch the current container between different layout styles
	bindsym $mod+s layout stacking
	bindsym $mod+w layout tabbed
	bindsym $mod+e layout toggle split

# Make the current focus fullscreen
	 bindsym $mod+shift+f fullscreen

# Toggle the current focus between tiling and floating mode
	bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
	bindsym $mod+space focus mode_toggle

# Move focus to the parent container
	bindsym $mod+p afocus parent

# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
	bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
	bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
# left will shrink the containers width
# right will grow the containers width
# up will shrink the containers height
# down will grow the containers height
	bindsym $left resize grow width 320px
	bindsym $down resize shrink height 216px
	bindsym $up resize grow height 216px
	bindsym $right resize shrink width 320px

# Ditto, with arrow keys
	bindsym Right resize grow width 320px
	bindsym Down resize shrink height 216px
	bindsym Up resize grow height 216px
	bindsym Left resize shrink width 320px

# Return to default mode
	bindsym Return mode "default"
	bindsym Tab mode "default"
	bindsym Escape mode "default"
	bindsym Space mode "default"
 
}

#bindsym $mod+r mode "resize"
bindsym ctrl+a mode "resize"
# Set inner/outer gaps
	#gaps inner 5
	#gaps outer 5

####################### This has to do with windows customization
# Hide titlebar on windows:
	default_border pixel 3
	default_floating_border pixel 3
	hide_edge_borders none

#This is window gaps and it will be set for all 4 window borders.
	gaps inner 15
	smart_borders off

#windows instructions copy from github may not be necessary
	for_window [app_id="floating"] floating enable

## Window decoration
########class                                      border  backgr. text    indicator child_border
	client.focused                             #00FFFF #00FFFF #eceff4 #00FFFF   #00FFFF
	#client.focused_inactive                    #88c0d0 #12151c #d8dee9 #4c566a   #4c566a
	#client.unfocused                              #88c0d0 #12151c #d8dee9 #4c566a   #4c566a
	client.urgent                              #ebcb8b #ebcb8b #2e3440 #8fbcbb   #ebcb8b
######################################################

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.

#Setting Transparency per application

	for_window [app_id="firefox"] opacity 1.0
	for_window [app_id="dolphin"] opacity 0.85
	for_window [app_id="kwrite"] opacity 0.85
	for_window [app_id="Thunar"] opacity 0.85
	for_window [app_id="org.clementine_player.Clementine"] opacity 0.85
	for_window [app_id="transmission-gtk"] opacity 0.85
	for_window [app_id="org.kde.kcalc"] opacity 0.85
	


###################################These are copied from Ubuntu-Sway###################################
#Opacity/Transparency Script for unfocused windows
  	#exec ~/.config/sway/scripts/inactive-window-transparency.py --opacity 0.9
	#exec python3 ~/.config/sway/scripts/swayfader.py 


exec_always {
	gsettings set org.gnome.desktop.interface gtk-theme "Qogir-Dark"
	gsettings set org.gnome.desktop.interface icon-theme "Qogir-dark"
	gsettings set org.gnome.desktop.interface cursor-theme "Lyra"
}
#
#Change Keyboard settings. Below numlock is enabled on startup and Caps Lock and and Escape key has been swapped#################################################################
	#input type:keyboard xkb_options caps:swapescape
	input type:keyboard xkb_numlock enabled

	set $powermenu ~/.config/waybar/scripts/power-menu.sh
	bindsym $mod+f1 exec ~/.config/sway/scripts/lockman.sh
# Open the power menu
	bindsym $mod+Shift+x exec $powermenu
	bindsym $mod+x exec $powermenu



#Action // Move focused window to a new workspace and switch there
	bindsym $mod+Shift+m exec ~/.config/sway/scripts/first-empty-workspace.py --move --switch

#Launch // Open launcher in a new workspace ##
	bindsym $mod+Shift+d exec ~/.config/sway/scripts/first-empty-workspace.py --switch, exec $menu

#Navigation // Switch to a new workspace ##
	bindsym $mod+n exec ~/.config/sway/scripts/first-empty-workspace.py --switch

#Action // Move focused window to a new workspace ##
	bindsym $mod+Shift+n exec ~/.config/sway/scripts/first-empty-workspace.py --move

#Navigation // Switch to the last recently used workspace ##
	bindsym $mod+Tab workspace back_and_forth

#Navigation // Switching between containers in the workspace // $mod + [] ##
	bindsym $mod+bracketright nop top_next
	bindsym $mod+bracketleft nop top_prev
#######################################################################################################
	bindsym alt+space exec rofi -show combi -combi-modes drun#run -modes combi
#	exec --no-startup-id firefox
#######################################################################################################

include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'

